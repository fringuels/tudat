/*    Copyright (c) 2010-2018, Delft University of Technology
 *    All rigths reserved
 *
 *    This file is part of the Tudat. Redistribution and use in source and
 *    binary forms, with or without modification, are permitted exclusively
 *    under the terms of the Modified BSD license. You should have received
 *    a copy of the license with this file. If not, please or visit:
 *    http://tudat.tudelft.nl/LICENSE.
 */

#ifndef GS_DATABASE_READER_H
#define GS_DATABASE_READER_H

#include <memory>

#include "Tudat/InputOutput/basicInputOutput.h"

namespace tudat
{
namespace input_output
{

//! Class to read and parse a Locations file for SCHED (locations.dat.txt)
//! generated by program SCHED_locations at GSFC using 2015a site, velocity,
//! and axis offset files.
/*!
 * Class to read and parse a Locations file for SCHED (locations.dat.txt)
 */
class groundStationsDatabaseReader
{
public:

    //! Class constructor, read and parse data file.
    /*!
     * Class constructor, reads data file to vector of doubles containing all data.
     */
    groundStationsDatabaseReader( ) { }

    //! Parse locations.dat.txt file and save parsed data file in /Tudat/External/GroundStationDatabase.
    /*!
     *  Parse locations.dat.txt file and save parsed data file in /Tudat/External/GroundStationDatabase.
     * \param inputDataFile Path and name of the locations.dat.txt file.
     */
    void parseGroundStationsDatabase( const std::string& inputDataFile )
    {
        parser( inputDataFile );
    }

    //! Function to read the Cartesian position of a specific ground station from GS_locations_database.txt file.
    /*!
     *  Function to read the Cartesian position of a specific ground station from GS_locations_database.txt file.
     *  \param gsName Ground Station ID (DBNAME).
     *  \return Cartesian position of the station.
     */
    Eigen::Vector3d getGroundStationPositionfromDatabase( std::string gsName );

protected:

private:

    //!Directory where parsed file is saved.
    /*!
     * Directory where parsed file is saved.
     */
    const std::string parsedFilePath_ = getTudatRootPath( ) + "External/GroundStationsDatabase/";

    //!Path and name of ground_station_locations_database file.
    /*!
     * Path and name of ground_station_locations_database file.
     */
    const std::string groundStationsDatabaseFile_ = getTudatRootPath( ) + "External/GroundStationsDatabase/ground_station_locations_database.txt";

    //! Parse locations.dat.txt data file.
    /*!
     * Parse data from the locations.dat.txt file
     * \param fileNameAndPath Path and name of the locations.dat.txt file.
     */
    void parser( const std::string& inputDataFile );

};

//! Typedef for shared-pointer to GSDatabaseReader object.
typedef std::shared_ptr< groundStationsDatabaseReader > groundStationsDatabaseReaderPointer;

} // namespace input_output
} // namespace tudat

#endif // TUDAT_GS_DATABASE_READER_H
